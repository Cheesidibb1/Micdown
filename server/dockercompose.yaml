version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - elixir_chat
    networks:
      - chat_network

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: chat_db
      POSTGRES_USER: chat_user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chat_network

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - chat_network

  elixir_chat:
    build: ./elixir-chat
    container_name: elixir_chat
    environment:
      DATABASE_URL: "postgres://chat_user:password@postgres/chat_db"
      SECRET_KEY_BASE: "supersecretkey"
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - postgres
      - redis
    networks:
      - chat_network

  python_worker:
    build: ./python-worker
    container_name: python_worker
    environment:
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - redis
    networks:
      - chat_network
  
  
  chat_frontend:
    build: ./chat-frontend
    container_name: chat_frontend
    networks:
      - chat_network
    expose:
      - "80"

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - chat_frontend
    networks:
      - chat_network



volumes:
  postgres_data:
  redis_data:

networks:
  chat_network:
    driver: bridge
